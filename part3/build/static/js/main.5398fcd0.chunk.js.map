{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Person.js","components/Persons.js","services/persons.js","components/Notification.js","App.js","index.js"],"names":["Filter","props","value","filterName","onChange","filterNameChange","PersonForm","onSubmit","handleFormSubmit","newName","handleNameChange","newNumber","handleNumberChange","type","Person","person","handleDeleteClick","name","number","onClick","Persons","persons","filterPersons","filter","toLowerCase","includes","map","event","id","baseUrl","axios","get","then","response","data","newPerson","post","toDeletePerson","delete","toUpdatePerson","put","Notification","addMessage","addPerson","deleteMessage","deletePerson","validationErrorMessage","validatePerson","className","App","useState","setPersons","setNewName","setNewNumber","setFilterName","addPersonMessage","setAddPersonMessage","deleteErrorMessage","setDeleteErrorMessage","setValidationErrorMessage","useEffect","personService","allPersons","updateNumberWithSameName","contactDetailsToUpdate","find","copyOfContactDetailsToUpdate","updatedPerson","catch","error","console","log","setTimeout","target","preventDefault","some","checkPhoneBookIfNameAlreadyExist","window","confirm","concat","personToBeDeleted","copyDeleted","deletedPersonWhichIsActuallyEmptyNow","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5398fcd0.chunk.js","sourcesContent":["import React from 'react'\n\n\nconst Filter = (props) => {\n    return (\n        <div>\n        filter shown with<input value = {props.filterName} onChange = {props.filterNameChange} />\n        </div>  \n    )\n}\n\nexport default Filter;","import React from 'react'\n\nconst PersonForm = (props) => {\n    return (\n        <div>\n        <form onSubmit={props.handleFormSubmit}>\n          <div>\n            name: <input value={props.newName} onChange={props.handleNameChange} />\n          </div>\n          <div>\n            number: <input value = {props.newNumber} onChange = {props.handleNumberChange} />\n          </div>\n          <div>\n            <button type=\"submit\">add</button>\n          </div>\n        </form>\n        </div>  \n    )\n}\n\nexport default PersonForm;","import React from 'react'\n\nconst Person = ({person, handleDeleteClick}) => {\n    return (\n        <li>{person.name} {person.number}<button value = {person.name} onClick = {handleDeleteClick}>delete</button></li>\n    )\n}\n\nexport default Person;","import React from 'react'\nimport Person from './Person'\n\nconst Persons = ({persons, filterName, handleDeleteClick}) => {\n    // console.log(persons, filterName)\n\n    const filterPersons = persons.filter((person) => {\n      return person.name.toLowerCase().includes(filterName.toLowerCase())\n    })\n\n    return (\n        <div>\n        <ul>\n          {filterPersons.map((person) => {\n            return <Person key={person.name} person = {person} handleDeleteClick = {(event) => handleDeleteClick(event, person.id)}/> // key prop is a feature in React not in html.\n          })}\n        </ul>\n        </div>\n    )\n}\n\nexport default Persons;","import axios from 'axios'\n\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    const req = axios.get(baseUrl)\n\n    return req.then((response) => {\n        return response.data\n    })\n\n}\n\nconst addPerson = (newPerson) => {\n    const req = axios.post(baseUrl, newPerson)\n\n    return req.then((response) => {\n        return response.data\n    })\n}\n\nconst deletePerson = (toDeletePerson) => {\n\n    const req = axios.delete(`${baseUrl}/${toDeletePerson.id}`, toDeletePerson)\n    // console.log(req)\n    return req.then((response) => {\n        // console.log(response)\n        // Here response.data will be empty as we have deleted the data.\n        return response.data\n    })\n}\n\nconst updatePerson = (toUpdatePerson) => {\n    \n    const req = axios.put(`${baseUrl}/${toUpdatePerson.id}`, toUpdatePerson)\n\n    return req.then((response) => {\n        return response.data\n    })\n}\n\nexport default {getAll, addPerson, deletePerson, updatePerson};\n// module.exports = {getAll, addPerson, deletePerson, updatePerson}","import React from 'react'\n\nconst Notification = ({addMessage, addPerson, deleteMessage, deletePerson, validationErrorMessage, validatePerson}) => {\n\n    // console.log(message)\n\n    if (addMessage === null && deleteMessage === null && validationErrorMessage === null){\n        return null\n    }\n\n    if (addMessage !== null){\n        return (\n            <div className = {addPerson}>{addMessage}</div>\n        )\n    }\n\n    if (deleteMessage !== null){\n        return (\n            <div className = {deletePerson}>{deleteMessage}</div>\n        )\n    }\n\n    if(validationErrorMessage !== null){\n        return (\n            <div className = {validatePerson}>{validationErrorMessage}</div>\n        )\n    }\n}\n\nexport default Notification;","import React, { useState, useEffect} from 'react'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport personService from './services/persons'\nimport Notification from './components/Notification'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [filterName, setFilterName] = useState('')\n  const [addPersonMessage, setAddPersonMessage] = useState(null)\n  const [deleteErrorMessage, setDeleteErrorMessage] = useState(null)\n  const [validationErrorMessage, setValidationErrorMessage] = useState(null)\n\n\n  const hook = () => {\n\n    personService.getAll()\n    .then(allPersons => {\n      setPersons(allPersons)\n    })\n  }\n\n  useEffect(hook, []);\n  \n  // Function checks whether the entered name is present in the original list.\n  const checkPhoneBookIfNameAlreadyExist = () => {\n    // console.log(persons.map((value) => value.name))\n\n    // var check = persons.map((value) => value.name)\n    // debugger;\n    if (persons.map(person => person.name).some(name => name === newName)){\n      return true\n    }\n  }\n\n  const handleFormSubmit = (event) => {\n    event.preventDefault();\n    // console.log(event)\n\n    if (!checkPhoneBookIfNameAlreadyExist()){\n      // var newPersons = persons.concat({ name: newName, number: newNumber})\n      var newPerson = {name: newName, number: newNumber}\n\n      personService.addPerson(newPerson)\n      .then((newPerson) => {\n        setPersons(persons.concat(newPerson))\n        // Notification message\n        setAddPersonMessage(`Added ${newPerson.name}`)\n        setTimeout(() => {\n          // The notification will be there for 5 sec and then will be removed.\n          setAddPersonMessage(null)\n        }, 5000)\n      // console.log(newPerson)\n      })\n      .catch(error => {\n        setValidationErrorMessage(error.response.data['error'])\n        setTimeout(() => {\n          setValidationErrorMessage(null)\n        }, 5000)\n\n        // console.log(error.response.data['error'])\n      })\n\n      \n      setNewName('')\n      setNewNumber('')\n    }\n    else{\n      if(window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)){\n          updateNumberWithSameName()\n      }\n      else{\n        setNewName('')\n        setNewNumber('')\n      }\n    }\n  }\n\n  const updateNumberWithSameName = () => {\n    \n    const contactDetailsToUpdate = persons.find((person) => person.name === newName)\n\n    const copyOfContactDetailsToUpdate = {...contactDetailsToUpdate, number: newNumber}\n\n    personService.updatePerson(copyOfContactDetailsToUpdate)\n    .then((updatedPerson) => {\n      // console.log(updatedPerson)\n      setPersons(persons.map((person) => {\n        return (person.id === contactDetailsToUpdate.id) ? updatedPerson: person\n      }))\n    })\n    .catch(error => {\n        console.log(error.response.data)\n        setValidationErrorMessage(error.response.data['error'])\n\n        setTimeout(() => {\n          setValidationErrorMessage(null)\n        }, 5000)\n      })\n\n\n      setNewName('')\n      setNewNumber('')\n  }\n\n  const handleNameChange = (event) => {\n    // console.log(event.target.value)\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const filterNameChange = (event) => {\n    setFilterName(event.target.value)\n  }\n\n  const handleDeleteClick = (event, id) => {\n\n    if (window.confirm(`Delete ${event.target.value} ?`)){\n      // const toDeletePerson = persons.filter()\n      // personService.deletePerson(personToBeDeleted)\n      const personToBeDeleted = persons.find(person => person.id === id)\n\n\n      const copyDeleted = {...personToBeDeleted}\n      // console.log(copyDeleted)\n\n      personService\n      .deletePerson(copyDeleted)\n      .then((deletedPersonWhichIsActuallyEmptyNow) => {\n        // console.log(copyDeleted)\n        setPersons(persons.filter(person => person.id !== copyDeleted.id))\n      })\n      .catch((error) => {\n        setDeleteErrorMessage(`Information of ${personToBeDeleted.name} has already been removed from the server`)\n\n        setTimeout(() => {\n          setDeleteErrorMessage(null)\n        }, 5000)\n      })\n    }\n\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification addMessage = {addPersonMessage} addPerson = \"addPerson\" deleteMessage = {deleteErrorMessage} deletePerson = \"deletePerson\" validationErrorMessage = {validationErrorMessage} validatePerson = \"validatePerson\"/>\n\n      <Filter filterName = {filterName} filterNameChange = {filterNameChange}/>\n\n      <h2>add a new</h2>\n      <PersonForm handleFormSubmit = {handleFormSubmit} newName = {newName} newNumber = {newNumber} handleNumberChange = {handleNumberChange} handleNameChange = {handleNameChange} />\n\n      <h2>Numbers</h2>\n      <Persons persons = {persons} filterName = {filterName} handleDeleteClick = {handleDeleteClick}/>\n    </div>\n  )\n\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}